version: 2

jobs:
  build:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - run:
          # By default node is installed as root and we are running as circleci
          # Using sudo causes weird issues so we just switch to installing globals in our home dir
          name: Setup NPM to make global installs to home directory
          command: |
            echo "export PATH=$HOME/bin:$PATH" >> $BASH_ENV
            npm set prefix=$HOME
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v10-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v10-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v10-dependencies-{{ checksum "package.json" }}
      # run tests!
      - run: npm test
      # lint
      - run: npm run lint
      # upload coverage to codecov.io
      # - run: npm run codecov
      - persist_to_workspace:
          root: ~/repo
          paths: .

  # Make sure the tests work on Node v8 as well
  build_node_v8:
    docker:
      - image: circleci/node:8
    working_directory: ~/repo_v8
    steps:
      - run:
          # By default node is installed as root and we are running as circleci
          # Using sudo causes weird issues so we just switch to installing globals in our home dir
          name: Setup NPM to make global installs to home directory
          command: |
            echo "export PATH=$HOME/bin:$PATH" >> $BASH_ENV
            npm set prefix=$HOME
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v8-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v8-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v8-dependencies-{{ checksum "package.json" }}
      # run tests!
      - run: npm test
      # lint
      - run: npm run lint

  publish:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
      - run:
          name: Publish package
          command: npm publish

  publish_next:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
      - run:
          name: Publish package
          command: npm publish --tag next

# https://circleci.com/docs/2.0/workflows/#executing-workflows-for-a-git-tag
workflows:
  version: 2
  build_and_publish:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - build_node_v8:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - publish:
          requires:
            - build_node_v8
          filters:
            tags:
              ignore: /^v.*-.*/ # e.g. "v3.1.0"
            branches:
              ignore: /.*/
      - publish_next:
          requires:
            - build_node_v8
          filters:
              tags:
                only: /^v.*-.*/ # e.g. "v3.1.0-beta.3"
              branches:
                ignore: /.*/